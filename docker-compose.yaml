version: '3'

services:

  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0 --explicit_defaults_for_timestamp --default-authentication-plugin=mysql_native_password
    container_name: db
    restart: always
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: nodedb
      MYSQL_USER: example
      MYSQL_PASSWORD: example
      MYSQL_ROOT_PASSWORD: example
    networks:
      - node-network


  app:
    build:
      context: node
      dockerfile: Dockerfile
    container_name: app
    entrypoint: dockerize -wait tcp://db:3306 -timeout 40s docker-entrypoint.sh
    command: npm start
    networks:
      - node-network
    volumes:
      - ./node:/usr/src/app
    tty: true
    ports:
      - "3000:8080"
    depends_on:
      - db


  nginx:
    image: nginx:1.17.10
    container_name: nginx
    hostname: nginx
    volumes:
      - ./nginx/templates/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:8080"
    networks:
      - node-network
    depends_on:
      - app      

networks:
  node-network:
    driver: bridge



# Acessamos o container do db: docker exec it db bash
# Entramos com usuario e senha root: mysql -uroot -p
# Setamos o banco de dados: use nodedb;
# Criamos uma tabela: create table people(id int not null auto_increment, name varchar(255), primary key(id));
# Confirmamos se a tabela foi gerada: desc people;

# Acessamos o container do node: docker exec -it app bash
# Instalamos o mysql: npm install mysql --save



# docker exec -it sb bash
# -> mysql -uroot -p (inserir senha)
# -> show nodedb;
# -> use database;
# -> create table people(id int not null auto_increment, name varchar(255), primary key(id));
